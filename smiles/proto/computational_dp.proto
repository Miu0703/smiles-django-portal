/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache LicenseVersion 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing;
 * software distributed under the License is distributed on an
 * "AS IS" BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

syntax = "proto3";

package smiles.model.comp;
import "google/protobuf/struct.proto";

message ComputationalDP {
  string data_product_id = 1;
  optional string parent_data_product_id = 2;
  optional string name = 3;

  optional string dye_family = 4; // Values - Acridinium, Pyrylium, Cyanine, Quinolinium, Rhodamine, etc.
  optional bytes structure = 5;
  repeated string other_names = 6;
  optional string note = 7;

  optional string project_name = 8;
  optional string experiment_name = 9;
  optional string username = 10;
  optional int64 indexed_time = 11;
  optional ExecutionEnvironment execution_environment = 12;
  optional CalculatedProperties calculated_properties = 13;
  optional FinalMoleculeStructuralFormats final_molecule_structural_formats = 14;
  optional Molecule molecule = 15;
  optional Calculation calculation = 16;
  optional Identifiers identifiers = 17;
  optional Files files = 18;
  optional InputFileConfiguration input_file_configuration = 19;
}

message ExecutionEnvironment {
  optional string calc_by = 1;
  optional double job_cpu_runtime = 2;
  optional string calc_machine = 3;
  optional int32 actual_job_runtime = 4;
  optional string fin_time = 5;
  optional int32 memory = 6;
  optional int32 n_proc_shared = 7;
  optional int64 fin_timestamp = 8;
}

message CalculatedProperties {
  optional int32 homos = 1;
  optional double energy = 2;
  optional Dipole dipole = 3;
  optional double hf = 4;
  repeated double maximum_gradient_distribution = 5 [packed = true];
  repeated double rms_gradient_distribution = 6 [packed = true];
  repeated int32 iterations = 7 [packed = true];
  optional double homo_eigen_value = 8;
  repeated string homo_eigen_values = 9;
  optional double lumo_eigen_value = 10;
  repeated string lumo_eigen_values = 11;
  optional double thermal = 12;
  optional double enthalpy = 13;
  optional double gibbs = 14;
  repeated double energy_distribution = 15 [packed = true];
  optional int32 n_imag = 16;
  optional double zero_point_energy = 17;
}

message FinalMoleculeStructuralFormats {
  optional string sdf = 1;
  optional string pdb = 2;
}

message Molecule {
  optional string formula = 1;
  optional int32 n_atom = 2;
  optional int32 multiplicity = 3;
  optional int32 charge = 4;
  optional string orb_sym = 5;
  optional string elec_sym = 6;
}

message Calculation {
  optional string job_status = 1;
  optional string basis = 2;
  optional int32 nmo = 3;
  optional string keywords = 4;
  optional int32 n_basis = 5;
  optional google.protobuf.Value mo_energies = 6;
  optional string package = 7;
  optional string calc_type = 8;
  optional string methods = 9;
}

message Identifiers {
  optional string inchi_key = 1;
  optional string canonical_smiles = 2;
  optional string inchi = 3;
  optional string smiles = 4;
}

message Files {
  optional string smiles_file = 1;
  optional string sdf_structure_file = 2;
  optional string gaussian_output_file = 3;
  optional string gaussian_input_file = 4;
  optional string pdb_structure_file = 5;
  optional string inchi_file = 6;
  optional string gaussian_checkpoint_file = 7;
  optional string gaussian_f_checkpoint_file = 8;
}

message InputFileConfiguration {
  optional string link_0_commands = 1;
  optional string route_commands = 2;
}

message Dipole {
  double x = 1;
  double y = 2;
  double z = 3;
}